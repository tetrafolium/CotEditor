attributes:
- beginString: '''ACTIVE\b'
  ignoreCase: true
  regularExpression: true
- beginString: '''ASCENDING\b'
  ignoreCase: true
  regularExpression: true
- beginString: '''BASE\b'
  ignoreCase: true
  regularExpression: true
- beginString: '''DELAYED\b'
  ignoreCase: true
  regularExpression: true
- beginString: '''DRIVING\b'
  ignoreCase: true
  regularExpression: true
- beginString: '''DRIVING_VALUE\b'
  ignoreCase: true
  regularExpression: true
- beginString: '''EVENT\b'
  ignoreCase: true
  regularExpression: true
- beginString: '''HIGH\b'
  ignoreCase: true
  regularExpression: true
- beginString: '''IMAGE(?=\()'
  ignoreCase: true
  regularExpression: true
- beginString: '''INSTANCE_NAME\b'
  ignoreCase: true
  regularExpression: true
- beginString: '''LAST_ACTIVE\b'
  ignoreCase: true
  regularExpression: true
- beginString: '''LAST_EVENT\b'
  ignoreCase: true
  regularExpression: true
- beginString: '''LAST_VALUE\b'
  ignoreCase: true
  regularExpression: true
- beginString: '''LEFT\b'
  ignoreCase: true
  regularExpression: true
- beginString: '''LEFTOF(?=\()'
  ignoreCase: true
  regularExpression: true
- beginString: '''LENGTH\b'
  ignoreCase: true
  regularExpression: true
- beginString: '''LOW\b'
  ignoreCase: true
  regularExpression: true
- beginString: '''PATH_NAME\b'
  ignoreCase: true
  regularExpression: true
- beginString: '''POS(?=\()'
  ignoreCase: true
  regularExpression: true
- beginString: '''PRED(?=\()'
  ignoreCase: true
  regularExpression: true
- beginString: '''QUIT\b'
  ignoreCase: true
  regularExpression: true
- beginString: '''RANGE\b'
  ignoreCase: true
  regularExpression: true
- beginString: '''REVERSE_RANGE\b'
  ignoreCase: true
  regularExpression: true
- beginString: '''RIGHT\b'
  ignoreCase: true
  regularExpression: true
- beginString: '''RIGHTOF(?=\()'
  ignoreCase: true
  regularExpression: true
- beginString: '''SAMPLE_NAME\b'
  ignoreCase: true
  regularExpression: true
- beginString: '''STABLE\b'
  ignoreCase: true
  regularExpression: true
- beginString: '''SUCC(?=\()'
  ignoreCase: true
  regularExpression: true
- beginString: '''TRANSACTION\b'
  ignoreCase: true
  regularExpression: true
- beginString: '''VAL(?=\()'
  ignoreCase: true
  regularExpression: true
- beginString: '''VALUE(?=\()'
  ignoreCase: true
  regularExpression: true
characters:
- beginString: '''.'''
  regularExpression: true
commands: []
commentDelimiters:
  inlineDelimiter: --
comments: []
completions: []
extensions:
- keyString: vhd
filenames: []
interpreters: []
keywords:
- beginString: abs
  ignoreCase: true
- beginString: access
  ignoreCase: true
- beginString: after
  ignoreCase: true
- beginString: alias
  ignoreCase: true
- beginString: all
  ignoreCase: true
- beginString: and
  ignoreCase: true
- beginString: architecture
  ignoreCase: true
- beginString: array
  ignoreCase: true
- beginString: assert
  ignoreCase: true
- beginString: attribute
  ignoreCase: true
- beginString: begin
  ignoreCase: true
- beginString: block
  ignoreCase: true
- beginString: body
  ignoreCase: true
- beginString: buffer
  ignoreCase: true
- beginString: bus
  ignoreCase: true
- beginString: case
  ignoreCase: true
- beginString: component
  ignoreCase: true
- beginString: configuration
  ignoreCase: true
- beginString: constant
  ignoreCase: true
- beginString: disconnect
  ignoreCase: true
- beginString: downto
  ignoreCase: true
- beginString: else
  ignoreCase: true
- beginString: elsif
  ignoreCase: true
- beginString: end
  ignoreCase: true
- beginString: entity
  ignoreCase: true
- beginString: exit
  ignoreCase: true
- beginString: file
  ignoreCase: true
- beginString: for
  ignoreCase: true
- beginString: function
  ignoreCase: true
- beginString: generate
  ignoreCase: true
- beginString: generic
  ignoreCase: true
- beginString: group
  ignoreCase: true
- beginString: guarded
  ignoreCase: true
- beginString: if
  ignoreCase: true
- beginString: impure
  ignoreCase: true
- beginString: in
  ignoreCase: true
- beginString: inertial
  ignoreCase: true
- beginString: inout
  ignoreCase: true
- beginString: is
  ignoreCase: true
- beginString: label
  ignoreCase: true
- beginString: library
  ignoreCase: true
- beginString: linkage
  ignoreCase: true
- beginString: literal
  ignoreCase: true
- beginString: loop
  ignoreCase: true
- beginString: map
  ignoreCase: true
- beginString: mod
  ignoreCase: true
- beginString: nand
  ignoreCase: true
- beginString: new
  ignoreCase: true
- beginString: next
  ignoreCase: true
- beginString: nor
  ignoreCase: true
- beginString: not
  ignoreCase: true
- beginString: 'null'
  ignoreCase: true
- beginString: of
  ignoreCase: true
- beginString: 'on'
  ignoreCase: true
- beginString: open
  ignoreCase: true
- beginString: or
  ignoreCase: true
- beginString: others
  ignoreCase: true
- beginString: out
  ignoreCase: true
- beginString: package
  ignoreCase: true
- beginString: port
  ignoreCase: true
- beginString: postponed
  ignoreCase: true
- beginString: procedual
  ignoreCase: true
- beginString: procedure
  ignoreCase: true
- beginString: process
  ignoreCase: true
- beginString: protected
  ignoreCase: true
- beginString: pure
  ignoreCase: true
- beginString: range
  ignoreCase: true
- beginString: record
  ignoreCase: true
- beginString: reference
  ignoreCase: true
- beginString: register
  ignoreCase: true
- beginString: reject
  ignoreCase: true
- beginString: rem
  ignoreCase: true
- beginString: report
  ignoreCase: true
- beginString: return
  ignoreCase: true
- beginString: rol
  ignoreCase: true
- beginString: ror
  ignoreCase: true
- beginString: select
  ignoreCase: true
- beginString: severity
  ignoreCase: true
- beginString: shared
  ignoreCase: true
- beginString: signal
  ignoreCase: true
- beginString: sla
  ignoreCase: true
- beginString: sll
  ignoreCase: true
- beginString: sra
  ignoreCase: true
- beginString: srl
  ignoreCase: true
- beginString: subtype
  ignoreCase: true
- beginString: then
  ignoreCase: true
- beginString: to
  ignoreCase: true
- beginString: transport
  ignoreCase: true
- beginString: type
  ignoreCase: true
- beginString: unaffected
  ignoreCase: true
- beginString: units
  ignoreCase: true
- beginString: until
  ignoreCase: true
- beginString: use
  ignoreCase: true
- beginString: variable
  ignoreCase: true
- beginString: wait
  ignoreCase: true
- beginString: when
  ignoreCase: true
- beginString: while
  ignoreCase: true
- beginString: with
  ignoreCase: true
- beginString: xnor
  ignoreCase: true
- beginString: xor
  ignoreCase: true
metadata:
  author: 1024jp
  distributionURL: https://coteditor.com
  lastModified: '2020-10-12'
  license: Same as CotEditor
  version: 1.0.0
numbers:
- beginString: (?<=\W|^)-?[0-9][0-9_]*(\.[0-9][0-9_]*)?(E[-+]?[0-9][0-9_]*)?
  description: decimal
  ignoreCase: false
  regularExpression: true
- beginString: '[0-9][0-9_]*#[0-9A-Z][0-9A-Z_]*(\.[0-9A-Z][0-9A-Z_]*)?#(E[-+]?[0-9][0-9_]*)?'
  description: based
  ignoreCase: false
  regularExpression: true
outlineMenu:
- beginString: \b(\s*)architecture\s+(\S+)
  bold: true
  description: architecture
  ignoreCase: true
  keyString: $1$2
- beginString: \b(\s*)component\s+(\S+)
  description: component
  ignoreCase: true
  keyString: $1$2
- beginString: \b(\s*)entity\s+(\S+)
  description: entity
  ignoreCase: true
  keyString: $1$2
  underline: true
strings:
- beginString: '"'
  endString: '"'
- beginString: \bB"[01][01_]*"
  description: bit string base_specifier
  ignoreCase: true
  regularExpression: true
- beginString: \bO"[0-7][0-7_]*"
  description: bit string base_specifier
  ignoreCase: true
  regularExpression: true
- beginString: \bX"[0-9A-F][0-9A-F_]*"
  description: bit string base_specifier
  ignoreCase: true
  regularExpression: true
types: []
values:
- beginString: 'false'
- beginString: 'null'
- beginString: 'true'
variables: []
